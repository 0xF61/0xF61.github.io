<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Protostar on Emir (0xF61)</title><link>/yaz%C4%B1lar/protostar/</link><description>Recent content in Protostar on Emir (0xF61)</description><generator>Hugo -- gohugo.io</generator><language>tr-TR</language><atom:link href="/yaz%C4%B1lar/protostar/index.xml" rel="self" type="application/rss+xml"/><item><title>Stack 0</title><link>/yaz%C4%B1lar/protostar/stack0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/yaz%C4%B1lar/protostar/stack0/</guid><description>Stack0.c #include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#include &amp;lt;stdio.h&amp;gt; int main(int argc, char **argv) { volatile int modified; char buffer[64]; modified = 0; gets(buffer); if(modified != 0) { printf(&amp;#34;you have changed the &amp;#39;modified&amp;#39; variable\n&amp;#34;); } else { printf(&amp;#34;Try again?\n&amp;#34;); } } Amaç: &amp;ldquo;you have changed the &amp;lsquo;modified&amp;rsquo; variable&amp;rdquo; satırını yazdırmak.
İstediğimiz cümleyi yazdırabilmemiz için programın akışını değiştirilebilmemiz gerekiyor. Bunun için bir yukarıdaki if koşulunun sağlanması gerekmekte, bunun içinde modified değişkeninin yukarıda tanımlanan 0 değerinden başka bir değere sahip olması gerekmekte.</description></item><item><title>Stack 1</title><link>/yaz%C4%B1lar/protostar/stack1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/yaz%C4%B1lar/protostar/stack1/</guid><description>Stack1.c #include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt; int main(int argc, char **argv) { volatile int modified; char buffer[64]; if(argc == 1) { errx(1, &amp;#34;please specify an argument\n&amp;#34;); } modified = 0; strcpy(buffer, argv[1]); if(modified == 0x61626364) { printf(&amp;#34;you have correctly got the variable to the right value\n&amp;#34;); } else { printf(&amp;#34;Try again, you got 0x%08x\n&amp;#34;, modified); } } Amaç: &amp;ldquo;you have correctly got the variable to the right value&amp;rdquo; satırını yazdırmak.</description></item><item><title>Stack 2</title><link>/yaz%C4%B1lar/protostar/stack2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/yaz%C4%B1lar/protostar/stack2/</guid><description>Stack2.c #include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt; int main(int argc, char **argv) { volatile int modified; char buffer[64]; char *variable; variable = getenv(&amp;#34;GREENIE&amp;#34;); if(variable == NULL) { errx(1, &amp;#34;please set the GREENIE environment variable\n&amp;#34;); } modified = 0; strcpy(buffer, variable); if(modified == 0x0d0a0d0a) { printf(&amp;#34;you have correctly modified the variable\n&amp;#34;); } else { printf(&amp;#34;Try again, you got 0x%08x\n&amp;#34;, modified); } } Amaç: &amp;ldquo;you have correctly got the variable to the right value&amp;rdquo; satırını yazdırmak.</description></item><item><title>Stack 3</title><link>/yaz%C4%B1lar/protostar/stack3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/yaz%C4%B1lar/protostar/stack3/</guid><description>Stack3.c #include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt; void win() { printf(&amp;#34;code flow successfully changed\n&amp;#34;); } int main(int argc, char **argv) { volatile int (*fp)(); char buffer[64]; fp = 0; gets(buffer); if(fp) { printf(&amp;#34;calling function pointer, jumping to 0x%08x\n&amp;#34;, fp); fp(); } } Amaç: main fonksiyonu içerisinde çağırılmayan bir fonksiyonu değişkenin değeri değiştirilerek programın akışına manipüle etmek.
Programın Çalıştırılması user@protostar:/opt/protostar/bin$ ./stack3 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA # 64 Tane A user@protostar:/opt/protostar/bin$ ./stack3 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCCC calling function pointer, jumping to 0x43434343 Segmentation fault Program çalıştırıldığı zaman kullanıcıdan bir giriş bekliyor.</description></item><item><title>Stack 4</title><link>/yaz%C4%B1lar/protostar/stack4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/yaz%C4%B1lar/protostar/stack4/</guid><description>Stack4.c #include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt; void win() { printf(&amp;#34;code flow successfully changed\n&amp;#34;); } int main(int argc, char **argv) { char buffer[64]; gets(buffer); } Önceki seviyeden farkı burada fp yok!
Amaç: main fonksiyonu içerisinde ki stack taşırılarak eip değerini değiştirip programın akışına manipüle etmek.
Programın Çalıştırılması user@protostar:/opt/protostar/bin$ ./stack4 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA user@protostar:/opt/protostar/bin$ ./stack4 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBCCCCDDDD Segmentation fault Önceki seviyede fp değişkenini değiştirerek istediğimiz adresteki fonksiyonu çalıştırabiliyorduk fakat bu seviyede böyle bir imkanımız olmadığı için eip registerinin stackteki yerini istediğimiz şekilde doldurarak programın akışını değiştireceğiz.</description></item><item><title>Stack 5</title><link>/yaz%C4%B1lar/protostar/stack5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/yaz%C4%B1lar/protostar/stack5/</guid><description>Stack5.c #include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;unistd.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt; int main(int argc, char **argv) { char buffer[64]; gets(buffer); } Önceki seviyeden farkı burada zıplanabilecek herhanbgi bir fonksiyon yok!
Amaç: stack taşırılarak eip değerini stackten bir adresi gösterecek şekilde ayarlayıp shellcode çalıştırmak.
Programın Çalıştırılması user@protostar:/opt/protostar/bin$ ./stack5 user@protostar:/opt/protostar/bin$ python -c &amp;#34;print &amp;#39;A&amp;#39;*100&amp;#34; | ./stack5 Segmentation fault Dönüş adresini tespit etmek user@protostar:/opt/protostar/bin$ ./stack4 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBCCCCDDDDEEEEFFFF Segmentation fault user@protostar:/opt/protostar/bin$ dmesg | tail -1 [16102.708303] stack4[1893]: segfault at 45454545 ip 45454545 sp bffffce0 error 4 Programa yukarıdaki gibi uzun bir string verdikten sonra segmentation fault alıyoruz ve dmesg çıktısına baktığımızda ip registerinin 45454545 olduğunu görüyoruz.</description></item></channel></rss>